//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

.btn {

  &:hover,
  &:focus {
    color: darken(@btn-default-color, 10%);
  }

  &:active,
  &.active {
    .box-shadow(inset 1px (@btn-lip-size - 1) 0 rgba(0,0,0,.125));
    &:hover {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 rgba(0,0,0,.125));
    }
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-default {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-default-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-default-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-default-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-default-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-default-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-default-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
.btn-secondary {
  .button-variant(@btn-secondary-color; @btn-secondary-bg; darken(@btn-secondary-border, 4%));
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-secondary-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-secondary-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-secondary-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-secondary-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-secondary-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-secondary-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
.btn-primary {
  .button-variant(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-primary-lip);
  .transition(.08s);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-primary-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-primary-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-primary-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-primary-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-primary-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
// Success appears as green
.btn-success {
  .button-variant(@btn-success-color; @btn-success-bg; @btn-success-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-success-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-success-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-success-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-success-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-success-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-success-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
// Info appears as blue-green
.btn-info {
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-info-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-info-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-info-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-info-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-info-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-info-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
// Warning appears as orange
.btn-warning {
  .button-variant(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-warning-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-warning-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-warning-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-warning-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-warning-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-warning-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
// Danger and error appear as red
.btn-danger {
  .button-variant(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
  .box-shadow(inset 0 -@btn-lip-size 0 @btn-danger-lip);
  &:hover {
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-danger-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-danger-lip, 10%));
    outline: none;
    .transition(.08s);
  }
  &.btn-xs, &.btn-sm {
    .box-shadow(inset 0 -(@btn-lip-size - 1) 0 @btn-danger-lip);
    &:hover {
      .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-danger-lip, 10%));
      outline: none;
      .transition(.08s);
    }
    &:active, &:focus {
      .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-danger-lip, 10%));
      outline: none;
      .transition(.08s);
    }
  }
}
// Outline button
.btn-outline {
  .button-variant(@btn-outline-color; @btn-outline-bg; @btn-outline-border);
  border-width: 2px;
  &:hover {
    .button-variant(darken(@btn-outline-color, 10%); @btn-outline-bg; darken(@btn-outline-border, 10%));
    outline: none;
    .transition(.08s);
  }
  &:active, &:focus {
    .button-variant(darken(@btn-outline-color, 20%); @btn-outline-bg; darken(@btn-outline-border, 20%));
    outline: none;
    .transition(.08s);
  }
  &.active {
    .button-variant(darken(@btn-outline-color, 20%); @btn-outline-bg; darken(@btn-outline-border, 20%));
    &:hover {
      .button-variant(darken(@btn-outline-color, 20%); @btn-outline-bg; darken(@btn-outline-border, 20%));
    }
  }
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  cursor: pointer;

  &.active {
    box-shadow: none;
    color: @link-hover-color;
    &:hover {
      box-shadow: none;
      text-decoration: none;
      color: @link-hover-color;
    }
  }
  &,
  &:hover,
  &:focus,
  &:active {
    box-shadow: none;
    color: @link-hover-color;
    &:hover {
      box-shadow: none;
      color: @link-hover-color;
    }
  }
  &:hover,
  &:focus {
    text-decoration: underline;
    box-shadow: none;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      box-shadow: none;
    }
  }
}


// Navbar Button

.navbar.navbar-inverse {
  .btn-default {
    .button-variant(@btn-default-color; darken(@btn-default-bg, 10%); darken(@btn-default-border, 10%));
    .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-default-lip, 10%));
    &:hover {
      .box-shadow(inset 0 -@btn-lip-size 0 darken(@btn-default-lip, 20%));
    }
    &:active, &:focus {
      .box-shadow(inset 2px @btn-lip-size 0 darken(@btn-default-lip, 20%));
    }
    &.btn-xs, &.btn-sm {
      &:hover {
        .box-shadow(inset 0 -(@btn-lip-size - 1) 0 darken(@btn-default-lip, 20%));
      }
      &:active, &:focus {
        .box-shadow(inset 1px (@btn-lip-size - 1) 0 darken(@btn-default-lip, 20%));
      }
    }
  }
}